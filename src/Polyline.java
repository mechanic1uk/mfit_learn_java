import java.util.ArrayList;
import java.util.List;

public class Polyline {
    private List<Point> points  = new ArrayList<>();

    public Polyline(){

    }

    public Polyline(Point ... points){
        addPoint(points);
    }

    public void addPoint(Point ... points){
        for (Point x: points){
            this.points.add(x);
        }
    }
    public void removePoint(Point point) {
        this.points.remove(point);
    }

    public int getSize() {
        return points.size();
    }

    public Point getPoint(int index) {
        return points.get(index);
    }

    public void addFirstPoint(Point point) {
        this.points.addFirst(point);
    }

    public void setPointCoordinates(int index, int x, int y) {
        this.points.get(index).setXY(x, y);
    }

    public Point getFirstPoint() {
        return points.getFirst();
    }
    public Point getLastPoint() {
        return points.getLast();
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Линия [");
        for (int i = 0; i < points.size(); i++) {
            sb.append(points.get(i));
            if (i < points.size() - 1) {
                sb.append(",");
            }
        }
        sb.append("]");
        return sb.toString();
    }
}


/*

@todo
1.5.7
Длина Ломаной. Измените сущность Ломаная из задачи 1.4.9. Новые требования включают:
•	В любой момент к имеющимся Точкам можно добавить новые Точки (добавляется либо массив, либо просто перечень Точек, что приводит к получению нового массива, содержащего как старые, так и новые значения).
•	Может возвращать общую длину Ломаной.
Необходимо выполнить следующие задачи:
1.	Создать Ломаную, проходящую через точки {1;5}, {2;8}, {5;3}
2.	Вывести на экран её длину
3.	Добавить (к ранее созданной Ломаной) точки {5;15}, {8;10}
4.	Снова вывести на экран длину Ломаной
@todo
3.1.2
Замкнутая ломаная. Создайте такой подвид сущности Ломанная,
полученной в задаче 1.5.7, которая будет представлять собой замкнутую ломанную линию,
то есть последовательность точек, начинающихся и заканчивающихся на одной и той же точке (см. рисунок 3.8).
Данная сущность во всех отношениях совпадает с обычной Ломаной, кроме расчета длины (по очевидным причинам).

 */

/*
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

1.5.7
Длина Ломаной. Измените сущность Ломаная из задачи 1.4.9. Новые требования включают:
•	В любой момент к имеющимся Точкам можно добавить новые Точки (добавляется либо массив, либо просто перечень Точек, что приводит к получению нового массива, содержащего как старые, так и новые значения).
•	Может возвращать общую длину Ломаной.
Необходимо выполнить следующие задачи:
1.	Создать Ломаную, проходящую через точки {1;5}, {2;8}, {5;3}
2.	Вывести на экран её длину
3.	Добавить (к ранее созданной Ломаной) точки {5;15}, {8;10}
4.	Снова вывести на экран длину Ломаной

@todo
3.3.5
Измерение длины. Разработайте метод, который принимает набор объектов у которых можно посчитать длину,
и возвращает сумму длин принятых объектов. Измените сущности полученные в задачах 1.5.7 (Ломаная линия) и 1.6.6 (Линия) таким образом,
что бы их можно было передать в этот метод. Продемонстрируйте работоспособность метода на примерах.

 */